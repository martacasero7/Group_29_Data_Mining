kable(tree_table2,
caption = "Prediction table form the full pruned tree") %>%
kable_styling(latex_options = "HOLD_position", full_width = F)
kable(test_class2,
caption = "Table form the full pruned tree") %>%
kable_styling(latex_options = "HOLD_position", full_width = T)
# show best parameters chosen
tuned
# prediction(best parameters: C=0.01, gamma=1)
svm.model.ovo<-svm(Crack~., train.data12, kernel = "radial",
C = 0.01, gamma = 1,
multiclass="ovo")
svm.model.ova<-svm(Crack~., train.data12, kernel = "radial",
C = 0.01, gamma = 1,
multiclass="ova",
)
pred_svm_1 <- predict(svm.model.ovo, test.data12[-12], type="class")
pred_svm_2 <- predict(svm.model.ova, test.data12[-12])
accuracy <- function(actual, predicted) {
mean(actual == predicted)
}
summary(data.frame(pred.ovo = predict(svm.model.ovo, test.data12[,-12]), pred.ova = predict(svm.model.ova, test.data12[,-12]),
actual = test.data12$Crack))
acc1 <- accuracy(test.data$Crack, pred_svm_1)
acc2 <- accuracy(test.data$Crack, pred_svm_2)
# prediction outcomes for different strategies One-vs-One (OVO)
# and One-vs-All (OVA) approaches turned out to be same, all predicted the test
# observations into Never Used which have around 86.30% accuracy
kable(model_adaboost$confusion,
caption = "Prediction table from adaptive boosting") %>%
kable_styling(latex_options = "HOLD_position", full_width = F)
plotnet(nn_group, rep="best")
data.pred.tr1 <- predict((lda.data1))
densityplot <- ldahist(data = data.pred.tr1$x[,1], g=train.data1$Crack)
dataset1 <- data.frame(Type=train.data1$Crack, lda=data.pred.tr1$x)
ggplot(dataset1, aes(x=lda.LD1)) +
geom_density(aes(group=Type, colour=Type, fill=Type), alpha=0.3)+
labs(x= "", y="Density")
# prediction(best parameters: C=0.01, gamma=1)
svm.model.ovo<-svm(Crack~., train.data12, kernel = "radial",
C = 0.01, gamma = 1,
multiclass="ovo")
svm.model.ova<-svm(Crack~., train.data12, kernel = "radial",
C = 0.01, gamma = 1,
multiclass="ova",
)
par(mfrow = c(1, 2))
plot(predict(svm.model.ovo, test.data[,-13]),test.data[,13],
xlab = "origional", ylab = "predict under one vs. one")
plot(predict(svm.model.ovo, test.data[,-13]),test.data[,13],
xlab = "origional", ylab = "predict under one vs. one")
plot(predict(svm.model.ovo, test.data[,-13]),test.data[,13],
xlab = "origional", ylab = "")
plot(predict(svm.model.ovo, test.data[,-13]),test.data[,13],
xlab = "origional", ylab = "")
# prediction(best parameters: C=0.01, gamma=1)
svm.model.ovo<-svm(Crack~., train.data12, kernel = "radial",
C = 0.01, gamma = 1,
multiclass="ovo")
svm.model.ova<-svm(Crack~., train.data12, kernel = "radial",
C = 0.01, gamma = 1,
multiclass="ova",
)
pred_svm_1 <- predict(svm.model.ovo, test.data12[-12], type="class")
pred_svm_2 <- predict(svm.model.ova, test.data12[-12])
plot(pred_svm_1, test.data12$Crack,
xlab = "original", ylab = "")
plot(pred_svm_2 ,test.data12$Crack,
xlab = "original", ylab = "")
nn_ggplot<-Regression_NN_Errors %>%
ggplot(aes(Network,SSE,fill=DataSet))+
geom_col(position="dodge")
plot(pred_svm_1, test.data12$Crack,
xlab = "original", ylab = "")
plot(pred_svm_2 ,test.data12$Crack,
xlab = "original", ylab = "")
grid.arrange(ncol=2 ,plot(pred_svm_1, test.data12$Crack,
xlab = "original", ylab = ""), plot(pred_svm_2 ,test.data12$Crack,
xlab = "original", ylab = ""))
grid.arrange(ncol=2 ,(plot(pred_svm_1, test.data12$Crack,
xlab = "original", ylab = "")), (plot(pred_svm_2 ,test.data12$Crack,
xlab = "original", ylab = "")))
pred_svm_1 <- predict(svm.model.ovo, test.data12[-12], type="class")
pred_svm_2 <- predict(svm.model.ova, test.data12[-12])
p1 <- plot(pred_svm_1, test.data12$Crack,
xlab = "original", ylab = "")
p2<- plot(pred_svm_2 ,test.data12$Crack,
xlab = "original", ylab = "")
p1
p2
pred_svm_1 <- predict(svm.model.ovo, test.data12[-12], type="class")
pred_svm_2 <- predict(svm.model.ova, test.data12[-12])
p1 <- (pred_svm_1, test.data12$Crack,
p1 <- plot(pred_svm_1, test.data12$Crack,
xlab = "original", ylab = "")
p2<- plot(pred_svm_2 ,test.data12$Crack,
xlab = "original", ylab = "")
p1
p2
plot(pred_svm_1, test.data12$Crack,
xlab = "original", ylab = "")
plot(pred_svm_2 ,test.data12$Crack,
xlab = "original", ylab = "")
accuracy <- function(actual, predicted) {
mean(actual == predicted)
}
summary(data.frame(pred.ovo = predict(svm.model.ovo, test.data12[,-12]), pred.ova = predict(svm.model.ova, test.data12[,-12]),
actual = test.data12$Crack))
acc1 <- accuracy(test.data$Crack, pred_svm_1)
acc2 <- accuracy(test.data$Crack, pred_svm_2)
# prediction outcomes for different strategies One-vs-One (OVO)
# and One-vs-All (OVA) approaches turned out to be same, all predicted the test
# observations into Never Used which have around 86.30% accuracy
plot(pred_svm_1, test.data12$Crack,
xlab = "original", ylab = "One vs. One")
plot(pred_svm_2 ,test.data12$Crack,
xlab = "original", ylab = "One vs. All")
pred_svm_1 <- predict(svm.model.ovo, test.data12[-12], type="class")
pred_svm_2 <- predict(svm.model.ova, test.data12[-12])
accuracy <- function(actual, predicted) {
mean(actual == predicted)
}
summary(data.frame(pred.ovo = predict(svm.model.ovo, test.data12[,-12]), pred.ova = predict(svm.model.ova, test.data12[,-12]),
actual = test.data12$Crack))
acc1 <- accuracy(test.data$Crack, pred_svm_1)
acc2 <- accuracy(test.data$Crack, pred_svm_2)
# prediction outcomes for different strategies One-vs-One (OVO)
# and One-vs-All (OVA) approaches turned out to be same, all predicted the test
# observations into Never Used which have around 86.30% accuracy
group_29 <- read_csv("https://raw.githubusercontent.com/martacasero7/Group_29_Data_Mining/main/group_29.csv")
group_29 <- group_29 %>% filter(Semer == "CL0") #Semer is a fake drug so people who have said they have taken it have unreliable responses
levels(as.factor(group_29$Crack))
group_29 <- na.omit(group_29)
group_29$Crack <- as.factor(group_29$Crack)
levels(group_29$Crack)
group_29$Crack <- ifelse(group_29$Crack == "CL0", "Never Used",
ifelse(group_29$Crack %in% c("CL1", "CL2"), "Used over a year",
"Used last year"))
group_29$Crack <- as.factor(group_29$Crack)
levels(group_29$Crack)
summary(group_29$Crack)
group_29_ <- group_29 %>% mutate(Age = ifelse(Age=="-0.95197", "18-24",
ifelse(Age=="-0.07854", "25-34",
ifelse(Age=="0.49788", "35-44",
ifelse(Age=="1.09449", "45-54",
ifelse(Age=="1.82213", "55-64", "65+"))))))
group_29_ <- group_29_ %>% mutate(Gender = ifelse(Gender=="0.48246", "Female", "Male"))
group_29_ <- group_29_ %>% mutate(Education = ifelse(Education==" -2.43591", "Left before 16",
ifelse(Education=="-1.73790", "Left at 16",
ifelse(Education=="-1.43719", "Left at 17",
ifelse(Education=="-1.22751", "Left at 18",
ifelse(Education=="-0.61113", "Universtiy no degree",
ifelse(Education=="-0.05921", "University Diploma",
ifelse(Education=="0.45468", "University degree",
ifelse(Education=="1.16365", "Masters", "Phd")))))))))
group_29_ <- group_29_ %>% mutate(Country = ifelse(Country=="-0.09765", "Australia",
ifelse(Country==" 0.24923", "Canada",
ifelse(Country=="-0.46841", "New Zealand",
ifelse(Country=="-0.28519", "Other",
ifelse(Country=="0.21128", "Ireland",
ifelse(Country=="0.96082", "UK", "USA")))))))
group_29_ <- group_29_ %>% mutate(Ethnicity = ifelse(Ethnicity=="-0.50212", "Asian",
ifelse(Ethnicity=="-1.10702", "Black",
ifelse(Ethnicity=="1.90725", "Mixed Black/Asian",
ifelse(Ethnicity=="0.12600", "Mixed White/Asian",
ifelse(Ethnicity=="-0.22166", "Mixed White/Black",
ifelse(Ethnicity=="-0.31685", "White", "Other")))))))
group_29 <- read_csv("https://raw.githubusercontent.com/martacasero7/Group_29_Data_Mining/main/group_29.csv")
group_29 <- group_29 %>% filter(Semer == "CL0") #Semer is a fake drug so people who have said they have taken it have unreliable responses
levels(as.factor(group_29$Crack))
group_29 <- na.omit(group_29)
group_29$Crack <- as.factor(group_29$Crack)
summary(group_29$Crack)
group_29$Crack <- ifelse(group_29$Crack == "CL0", "Never Used",
ifelse(group_29$Crack %in% c("CL1", "CL2"), "Used over a year",
"Used last year"))
group_29$Crack <- as.factor(group_29$Crack)
levels(group_29$Crack)
summary(group_29$Crack)
group_29_ <- group_29 %>% mutate(Age = ifelse(Age=="-0.95197", "18-24",
ifelse(Age=="-0.07854", "25-34",
ifelse(Age=="0.49788", "35-44",
ifelse(Age=="1.09449", "45-54",
ifelse(Age=="1.82213", "55-64", "65+"))))))
group_29_ <- group_29_ %>% mutate(Gender = ifelse(Gender=="0.48246", "Female", "Male"))
group_29_ <- group_29_ %>% mutate(Education = ifelse(Education==" -2.43591", "Left before 16",
ifelse(Education=="-1.73790", "Left at 16",
ifelse(Education=="-1.43719", "Left at 17",
ifelse(Education=="-1.22751", "Left at 18",
ifelse(Education=="-0.61113", "Universtiy no degree",
ifelse(Education=="-0.05921", "University Diploma",
ifelse(Education=="0.45468", "University degree",
ifelse(Education=="1.16365", "Masters", "Phd")))))))))
group_29_ <- group_29_ %>% mutate(Country = ifelse(Country=="-0.09765", "Australia",
ifelse(Country==" 0.24923", "Canada",
ifelse(Country=="-0.46841", "New Zealand",
ifelse(Country=="-0.28519", "Other",
ifelse(Country=="0.21128", "Ireland",
ifelse(Country=="0.96082", "UK", "USA")))))))
group_29_ <- group_29_ %>% mutate(Ethnicity = ifelse(Ethnicity=="-0.50212", "Asian",
ifelse(Ethnicity=="-1.10702", "Black",
ifelse(Ethnicity=="1.90725", "Mixed Black/Asian",
ifelse(Ethnicity=="0.12600", "Mixed White/Asian",
ifelse(Ethnicity=="-0.22166", "Mixed White/Black",
ifelse(Ethnicity=="-0.31685", "White", "Other")))))))
group_29 <- read_csv("https://raw.githubusercontent.com/martacasero7/Group_29_Data_Mining/main/group_29.csv")
group_29 <- group_29 %>% filter(Semer == "CL0") #Semer is a fake drug so people who have said they have taken it have unreliable responses
levels(as.factor(group_29$Crack))
group_29 <- na.omit(group_29)
group_29$Crack <- as.factor(group_29$Crack)
seven <- summary(group_29$Crack)
group_29$Crack <- ifelse(group_29$Crack == "CL0", "Never Used",
ifelse(group_29$Crack %in% c("CL1", "CL2"), "Used over a year",
"Used last year"))
group_29$Crack <- as.factor(group_29$Crack)
levels(group_29$Crack)
three <- summary(group_29$Crack)
group_29_ <- group_29 %>% mutate(Age = ifelse(Age=="-0.95197", "18-24",
ifelse(Age=="-0.07854", "25-34",
ifelse(Age=="0.49788", "35-44",
ifelse(Age=="1.09449", "45-54",
ifelse(Age=="1.82213", "55-64", "65+"))))))
group_29_ <- group_29_ %>% mutate(Gender = ifelse(Gender=="0.48246", "Female", "Male"))
group_29_ <- group_29_ %>% mutate(Education = ifelse(Education==" -2.43591", "Left before 16",
ifelse(Education=="-1.73790", "Left at 16",
ifelse(Education=="-1.43719", "Left at 17",
ifelse(Education=="-1.22751", "Left at 18",
ifelse(Education=="-0.61113", "Universtiy no degree",
ifelse(Education=="-0.05921", "University Diploma",
ifelse(Education=="0.45468", "University degree",
ifelse(Education=="1.16365", "Masters", "Phd")))))))))
group_29_ <- group_29_ %>% mutate(Country = ifelse(Country=="-0.09765", "Australia",
ifelse(Country==" 0.24923", "Canada",
ifelse(Country=="-0.46841", "New Zealand",
ifelse(Country=="-0.28519", "Other",
ifelse(Country=="0.21128", "Ireland",
ifelse(Country=="0.96082", "UK", "USA")))))))
group_29_ <- group_29_ %>% mutate(Ethnicity = ifelse(Ethnicity=="-0.50212", "Asian",
ifelse(Ethnicity=="-1.10702", "Black",
ifelse(Ethnicity=="1.90725", "Mixed Black/Asian",
ifelse(Ethnicity=="0.12600", "Mixed White/Asian",
ifelse(Ethnicity=="-0.22166", "Mixed White/Black",
ifelse(Ethnicity=="-0.31685", "White", "Other")))))))
kable(seven)
kable(three)
kable(seven, caption = "Number of observations in a seven level classification") +
kable_styling(latex_options = "HOLD_position", full_width = F)
kable(seven, caption = "Number of observations in a seven level classification") %>%
kable_styling(latex_options = "HOLD_position", full_width = F)
kable(three, caption = "Number of observations in a three level classification ") %>%
kable_styling(latex_options = "HOLD_position", full_width = F)
library(neuralnet)
set.seed(84)
nn_crack<-neuralnet(f,data=crack_matrix_final,hidden = c(2),
linear.output = FALSE)
train<-train.neural
library(readr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(reshape2)
library(rpart)
library(rpart.plot)
library(cowplot)
library(gridExtra)
library(GGally)
library(skimr)
library(tibble)
library(randomForest)
library(caret)
library(MASS)
library(e1071)
library(kableExtra)
group_29 <- read_csv("https://raw.githubusercontent.com/martacasero7/Group_29_Data_Mining/main/group_29.csv")
group_29 <- group_29 %>% filter(Semer == "CL0") #Semer is a fake drug so people who have said they have taken it have unreliable responses
levels(as.factor(group_29$Crack))
group_29 <- na.omit(group_29)
group_29$Crack <- as.factor(group_29$Crack)
seven <- summary(group_29$Crack)
group_29$Crack <- ifelse(group_29$Crack == "CL0", "Never Used",
ifelse(group_29$Crack %in% c("CL1", "CL2"), "Used over a year",
"Used last year"))
group_29$Crack <- as.factor(group_29$Crack)
levels(group_29$Crack)
three <- summary(group_29$Crack)
group_29_ <- group_29 %>% mutate(Age = ifelse(Age=="-0.95197", "18-24",
ifelse(Age=="-0.07854", "25-34",
ifelse(Age=="0.49788", "35-44",
ifelse(Age=="1.09449", "45-54",
ifelse(Age=="1.82213", "55-64", "65+"))))))
group_29_ <- group_29_ %>% mutate(Gender = ifelse(Gender=="0.48246", "Female", "Male"))
group_29_ <- group_29_ %>% mutate(Education = ifelse(Education==" -2.43591", "Left before 16",
ifelse(Education=="-1.73790", "Left at 16",
ifelse(Education=="-1.43719", "Left at 17",
ifelse(Education=="-1.22751", "Left at 18",
ifelse(Education=="-0.61113", "Universtiy no degree",
ifelse(Education=="-0.05921", "University Diploma",
ifelse(Education=="0.45468", "University degree",
ifelse(Education=="1.16365", "Masters", "Phd")))))))))
group_29_ <- group_29_ %>% mutate(Country = ifelse(Country=="-0.09765", "Australia",
ifelse(Country==" 0.24923", "Canada",
ifelse(Country=="-0.46841", "New Zealand",
ifelse(Country=="-0.28519", "Other",
ifelse(Country=="0.21128", "Ireland",
ifelse(Country=="0.96082", "UK", "USA")))))))
group_29_ <- group_29_ %>% mutate(Ethnicity = ifelse(Ethnicity=="-0.50212", "Asian",
ifelse(Ethnicity=="-1.10702", "Black",
ifelse(Ethnicity=="1.90725", "Mixed Black/Asian",
ifelse(Ethnicity=="0.12600", "Mixed White/Asian",
ifelse(Ethnicity=="-0.22166", "Mixed White/Black",
ifelse(Ethnicity=="-0.31685", "White", "Other")))))))
age_hist <- ggplot(data = group_29_, aes(x=as.factor(Age), group = Crack)) +
geom_bar(aes(y = ..prop.., fill= Crack), stat="count", position="dodge") +
scale_fill_manual(values =  c("salmon", "grey", "darkseagreen")) +
labs(x= "", y="Proportion") +
theme(axis.text.x=element_text(angle=45, hjust=1))
age <- as.data.frame(table(group_29_$Age))
colnames(age) <- c("Age", "Value")
age$Age <- as.factor(age$Age)
age_piechart <- ggplot(data = age, aes(x="",y=Value, fill=Age))+
geom_col(width = 1, col = "white") +
coord_polar(theta = "y") +
theme_void()
grid.arrange(age_hist, age_piechart, ncol =2,  widths = c(1, 0.5))
gender_hist <- ggplot(data = group_29_, aes(x=as.factor(Gender), group = Crack)) +
geom_bar(aes(y = ..prop.., fill= Crack), stat="count", position="dodge") +
scale_fill_manual(values =  c("salmon", "grey", "darkseagreen")) +
labs(x= "", y="Proportion")
gender <- as.data.frame(table(group_29_$Gender))
colnames(gender) <- c("Gender", "Value")
gender$Gender <- as.factor(gender$Gender)
gender_piechart <- ggplot(data = gender, aes(x="",y=Value, fill=Gender))+
geom_col(width = 1, col = "white") +
coord_polar(theta = "y") +
theme_void()
grid.arrange(gender_hist, gender_piechart, ncol =2,  widths = c(1, 0.5))
edu_hist <- ggplot(data = group_29_, aes(x=as.factor(Education), group = Crack)) +
geom_bar(aes(y = ..prop.., fill= Crack), stat="count", position="dodge") +
scale_fill_manual(values =  c("salmon", "grey", "darkseagreen")) +
labs(x= "", y="Proportion") +
theme(axis.text.x=element_text(angle=45, hjust=1))
edu <- as.data.frame(table(group_29_$Education))
colnames(edu) <- c("Education", "Value")
edu$Education <- as.factor(edu$Education)
edu_piechart <- ggplot(data = edu, aes(x="",y=Value, fill=Education))+
geom_col(width = 1, col = "white") +
coord_polar(theta = "y") +
theme_void()
grid.arrange(edu_hist, edu_piechart, ncol =2,  widths = c(1, 0.7))
country_hist <- ggplot(data = group_29_, aes(x=as.factor(Country), group = Crack)) +
geom_bar(aes(y = ..prop.., fill= Crack), stat="count", position="dodge") +
scale_fill_manual(values =  c("salmon", "grey", "darkseagreen")) +
labs(x= "", y="Proportion") +
theme(axis.text.x=element_text(angle=45, hjust=1))
country <- as.data.frame(table(group_29_$Country))
colnames(country) <- c("Country", "Value")
country$Country <- as.factor(country$Country)
country_piechart <- ggplot(data = country, aes(x="",y=Value, fill=Country))+
geom_col(width = 1, col = "white") +
coord_polar(theta = "y") +
theme_void()
grid.arrange(country_hist, country_piechart, ncol =2,  widths = c(1, 0.6))
eth_hist <- ggplot(data = group_29_, aes(x=as.factor(Ethnicity), group = Crack)) +
geom_bar(aes(y = ..prop.., fill= Crack), stat="count", position="dodge") +
scale_fill_manual(values =  c("salmon", "grey", "darkseagreen")) +
labs(x= "", y="Proportion") +
theme(axis.text.x=element_text(angle=45, hjust=1))
eth <- as.data.frame(table(group_29_$Ethnicity))
colnames(eth) <- c("Ethnicity", "Value")
eth$Ethnicity <- as.factor(eth$Ethnicity)
eth_piechart <- ggplot(data = eth, aes(x="",y=Value, fill=Ethnicity))+
geom_col(width = 1, col = "white") +
coord_polar(theta = "y") +
theme_void()
grid.arrange(eth_hist, eth_piechart, ncol =2,  widths = c(1, 0.5))
crack <- group_29_ %>% dplyr::select(!c("ID", "Age", "Gender", "Education", "Country", "Ethnicity", "Semer")) %>% melt(id="Crack")
crack$value <- as.numeric(crack$value)
ggplot(crack, aes(x = variable, y=value)) +
geom_boxplot(aes(fill= Crack)) +
scale_fill_manual(values =  c("salmon", "grey", "darkseagreen")) +
labs(x="", y="Grade") +
ggpubr::rotate_x_text()
n <- nrow(group_29) #sample size
m <- ncol(group_29)
ind1 <- sample(c(1:n),        floor(0.5 * n))
ind2 <- sample(c(1:n)[-ind1], floor(0.25 * n))
ind3 <- setdiff(c(1:n),c(ind1,ind2))
train.data <- group_29[ind1, ]
valid.data <- group_29[ind2, ]
test.data  <- group_29[ind3, ]
train.data <- train.data[, -c((m-2):(m-1))]
valid.data <- valid.data[, -c((m-2):(m-1))]
test.data <-   test.data[, -c((m-2):(m-1))]
var.mean <- apply(train.data[,2:12],2,mean) #calculate mean of each feature
var.sd   <- apply(train.data[,2:12],2,sd)   #calculate standard deviation of each feature
# standardise training, validation and test sets
train.data.scale <-t(apply(train.data[,2:12], 1, function(x) (x-var.mean)/var.sd))
valid.data.scale <-t(apply(valid.data[,2:12], 1, function(x) (x-var.mean)/var.sd))
test.data.scale  <-t(apply(test.data[,2:12],  1, function(x) (x-var.mean)/var.sd))
library(class)
K <- c(1:25)
valid.error <- c()
for (k in K){
valid.pred <- knn(train.data.scale, valid.data.scale, train.data[,13, drop=TRUE], k=k)
valid.error[k] <- mean(valid.data[,13, drop=TRUE] != valid.pred)
}
group_29_neural <- group_29 %>% mutate(Crack= ifelse(Crack=="Never Used", 0,
ifelse(Crack=="Used over a year", 2, 1)))
set.seed(1)
n <- nrow(group_29) #sample size
ind1 <- sample(c(1:n),        floor(0.5 * n))
ind2 <- sample(c(1:n)[-ind1], floor(0.25 * n))
ind3 <- setdiff(c(1:n),c(ind1,ind2))
index1_neural <- sample(c(1:n),        floor(0.9 * n))
index2_neural <- sample(c(1:n)[-ind1], floor(0.2 * n))
group_29_neural <- na.omit(group_29_neural)
train.neural <- group_29_neural[index1_neural, c(2,3,4,5,6,7,8,9,10,11,12,13,15)]
test.neural <- group_29_neural[index2_neural, c(2,3,4,5,6,7,8,9,10,11,12,13,15)]
standardisation <- function(x){
(x - mean(x)) / sd(x)
}
train.std <- apply(train.neural[,1:12], 2, standardisation)
train.std <- cbind(train.neural[,13],train.std)
test.std  <- apply(test.neural[,1:12], 2, standardisation)
test.std  <- cbind(test.neural[,13],test.std)
library(neuralnet)
set.seed(83)
nn_group<-neuralnet(Crack~.,data=train.neural, hidden=c(1), act.fct="logistic", linear.output=FALSE)
which.min(nn_group$result.matrix[])
library(NeuralNetTools)
nn_group_error<-sum((nn_group$net.result[[1]]-train.neural[,"Crack"])^2)/2
paste("SSE:",round(nn_group_error,4))
nn_group_test_output <- neuralnet::compute(nn_group,test.neural[,c("Age","Gender","Education","Country","Ethnicity","Nscore","Escore","Oscore","Ascore","Cscore","Impulsive","SS")])$net.result
nn_test_SSE<-sum((nn_group_test_output-test.neural[,"Crack"])^2)/2
nn_test_SSE
set.seed(83)
nn_group_2<-neuralnet(Crack~. ,data=train.neural,hidden=c(2), linear.output=FALSE)
set.seed(83)
nn_group_3<-neuralnet(Crack~. ,data=train.neural,hidden=c(3),linear.output=FALSE)
nn_group_error_2<-sum((nn_group_2$net.result[[1]]-train.neural[,"Crack"])^2)/2
nn_group_error_2
nn_group_test_output_2<-neuralnet::compute(nn_group_2,test.neural[,c("Age","Gender","Education","Country","Ethnicity","Nscore","Escore","Oscore","Ascore","Cscore","Impulsive","SS")])$net.result
nn_test_SSE_2<-sum((nn_group_test_output_2-test.neural[,"Crack"])^2)/2
nn_test_SSE_2
nn_group_error_3<-sum((nn_group_3$net.result[[1]]-train.neural[,"Crack"])^2)/2
nn_group_test_output_3<-neuralnet::compute(nn_group_3,test.neural[,c("Age","Gender","Education","Country","Ethnicity","Nscore","Escore","Oscore","Ascore","Cscore","Impulsive","SS")])$net.result
nn_test_SSE_3<-sum((nn_group_test_output_3-test.neural[,"Crack"])^2)/2
nn_group_error_3
nn_test_SSE_3
set.seed(84)
ten_nn_group_5<-neuralnet(Crack~. , data=train.neural, hidden=c(5),linear.output=TRUE)
ten_nn_group_error<-sum((ten_nn_group_5$net.result[[1]]-train.neural[,"Crack"])^2)/2
ten_nn_group_test_output<-neuralnet::compute(ten_nn_group_5,test.neural[,c("Age","Gender","Education","Country","Ethnicity","Nscore","Escore","Oscore","Ascore","Cscore","Impulsive","SS")])$net.result
ten_nn_group_test<-sum((ten_nn_group_test_output-test.neural[,"Crack"])^2)/2
ten_nn_group_test
plotnet(nn_group, rep="best")
plotnet(nn_group_2, rep="best")
plotnet(nn_group_3, rep="best")
plot(ten_nn_group_5,rep="best",cex=0.7)
library(tibble)
Regression_NN_Errors<-tibble(Network=rep(c("NN","NN2","NN3","NN5"),each=2),
DataSet=rep(c("Train","Test"),time=4),
SSE=c(
nn_group_error,nn_test_SSE,
nn_group_error_2,nn_test_SSE_2,
nn_group_error_3,nn_test_SSE_3,
ten_nn_group_error, ten_nn_group_test
))
nn_ggplot<-Regression_NN_Errors %>%
ggplot(aes(Network,SSE,fill=DataSet))+
geom_col(position="dodge")
nn_ggplot
nn_garson<-garson(ten_nn_group_5)
nn_garson
library(plyr)
train<-train.neural
crack_matrix<-model.matrix(Crack~Ethnicity+Gender+Country, data = train)
crack_matrix_final<-crack_matrix[,-1]
head(crack_matrix_final,4)
head(train[,c("Ethnicity","Gender", "Country")],4)
predictor_list<-paste(colnames(crack_matrix_final),collapse = "+")
predictor_list
f<-paste(c("train$Crack~",predictor_list),collapse = "")
f
library(neuralnet)
set.seed(84)
nn_crack<-neuralnet(f,data=crack_matrix_final,hidden = c(2),
linear.output = FALSE)
plot(nn_crack)
Crack_train_loss_nn <- nn_crack$result.matrix[1,1]
paste("CE training loss function from neural network:", round(Crack_train_loss_nn,3))
tsne_result=as.data.frame(tsne$Y)
train<-train.neural
crack_matrix<-model.matrix(Crack~Ethnicity+Gender+Country, data = train)
crack_matrix_final<-crack_matrix[,-1]
head(crack_matrix_final,4)
head(train[,c("Ethnicity","Gender", "Country")],4)
predictor_list<-paste(colnames(crack_matrix_final),collapse = "+")
predictor_list
f<-paste(c("train$Crack~",predictor_list),collapse = "")
f
library(neuralnet)
set.seed(84)
nn_crack<-neuralnet(f,data=crack_matrix_final,hidden = c(2),
linear.output = FALSE)
plot(nn_crack)
kable(tree_table,
caption = "Prediction table form the tree") %>%
kable_styling(font_size = 7, latex_options = "HOLD_position", full_width = F)
kable(test_class,
caption = "Table from tree") %>%
kable_styling(font_size = 7, latex_options = "HOLD_position", full_width = F)
